{"ast":null,"code":"import { AGREGAR_PLATO_A_PEDIDO, ELIMINAR_PEDIDO, FIN_CARGANDO_PEDIDOS_DB, INICIO_CARGANDO_PEDIDOS_DB, SET_PEDIDOS_DB } from '../types/types';\nconst initialState = {\n  pedidosDB: [],\n  cargandoPedidosDB: false,\n  pedidos: [] // pedidos: [\n  // \t{\n  // \t\tmesaId: 5,\n  // \t\tplatos: [\n  // \t\t\t{\n  // \t\t\t\tplato_id: 3,\n  // \t\t\t\tplato_nom: 'Tequeños',\n  // \t\t\t\tplato_img:\n  // \t\t\t\t\t'https://dojiw2m9tvv09.cloudfront.net/34469/product/disenosintitulo-78982.png',\n  // \t\t\t\tplato_pre: '15.00',\n  // \t\t\t\tcategoria_id: 2,\n  // \t\t\t\tcantidad: 2\n  // \t\t\t}\n  // \t\t]\n  // \t}\n  // ]\n\n};\nexport const pedidoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INICIO_CARGANDO_PEDIDOS_DB:\n      return { ...state,\n        cargandoPedidosDB: true\n      };\n\n    case FIN_CARGANDO_PEDIDOS_DB:\n      return { ...state,\n        cargandoPedidosDB: false\n      };\n\n    case SET_PEDIDOS_DB:\n      return { ...state,\n        pedidosDB: action.payload\n      };\n\n    case AGREGAR_PLATO_A_PEDIDO:\n      let pedidosState = [...state.pedidos]; //Buscando la posición del objeto pedido que tenga la mesaId a la cual queremos\n      //agregar el plato\n\n      let posicionPedido = pedidosState.findIndex(objPedido => objPedido.mesaId === action.payload.mesaId);\n\n      if (posicionPedido >= 0) {\n        // implica que ya existía un pedido para la mesaId a la cual queremos agregar el plato\n        // Entonces buscamos el plato en la mesa encontrada\n        let posicionPlato = pedidosState[posicionPedido].platos.findIndex(objPlato => objPlato.plato_id === action.payload.objPlato.plato_id); // analizamos si la posición del plato es mayor o igual 0 para\n        // agregar una unidad en caso de que existiera, o agregar el primer plato\n        // en caso de que no existiera\n\n        if (posicionPlato >= 0) {\n          pedidosState[posicionPedido].platos[posicionPlato].cantidad += 1;\n        } else {\n          // Implica que es el primer item del plato que agregamos a la mesa\n          let objPlatoNuevo = { ...action.payload.objPlato,\n            cantidad: 1\n          };\n          pedidosState[posicionPedido].platos.push(objPlatoNuevo);\n        }\n      } else {\n        // implica que es el primer plato de la mesaId\n        // Entonces creamos un objeto pedido nuevo con el primer plato de la mesa\n        let objPedidoNuevo = {\n          mesaId: action.payload.mesaId,\n          platos: [{ ...action.payload.objPlato,\n            cantidad: 1\n          }]\n        };\n        pedidosState.push(objPedidoNuevo);\n      }\n\n      return { ...state,\n        pedidos: pedidosState\n      };\n\n    case ELIMINAR_PEDIDO:\n      let copiaPedidos = [...state.pedidos];\n      copiaPedidos = copiaPedidos.filter(objPedido => objPedido.mesaId !== action.payload);\n      return { ...state,\n        pedidos: copiaPedidos\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/HP/Documents/Codigo-G13-BackEnd/semana01/semana05/dia3/pos_frontend/src/redux/reducers/pedidoReducer.js"],"names":["AGREGAR_PLATO_A_PEDIDO","ELIMINAR_PEDIDO","FIN_CARGANDO_PEDIDOS_DB","INICIO_CARGANDO_PEDIDOS_DB","SET_PEDIDOS_DB","initialState","pedidosDB","cargandoPedidosDB","pedidos","pedidoReducer","state","action","type","payload","pedidosState","posicionPedido","findIndex","objPedido","mesaId","posicionPlato","platos","objPlato","plato_id","cantidad","objPlatoNuevo","push","objPedidoNuevo","copiaPedidos","filter"],"mappings":"AAAA,SACCA,sBADD,EAECC,eAFD,EAGCC,uBAHD,EAICC,0BAJD,EAKCC,cALD,QAMO,gBANP;AAQA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,SAAS,EAAE,EADS;AAEpBC,EAAAA,iBAAiB,EAAE,KAFC;AAIpBC,EAAAA,OAAO,EAAE,EAJW,CAKpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AApBoB,CAArB;AAuBA,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKT,0BAAL;AACC,aAAO,EACN,GAAGO,KADG;AAENH,QAAAA,iBAAiB,EAAE;AAFb,OAAP;;AAID,SAAKL,uBAAL;AACC,aAAO,EACN,GAAGQ,KADG;AAENH,QAAAA,iBAAiB,EAAE;AAFb,OAAP;;AAID,SAAKH,cAAL;AACC,aAAO,EACN,GAAGM,KADG;AAENJ,QAAAA,SAAS,EAAEK,MAAM,CAACE;AAFZ,OAAP;;AAKD,SAAKb,sBAAL;AACC,UAAIc,YAAY,GAAG,CAAC,GAAGJ,KAAK,CAACF,OAAV,CAAnB,CADD,CAEC;AACA;;AACA,UAAIO,cAAc,GAAGD,YAAY,CAACE,SAAb,CACnBC,SAAD,IAAeA,SAAS,CAACC,MAAV,KAAqBP,MAAM,CAACE,OAAP,CAAeK,MAD/B,CAArB;;AAGA,UAAIH,cAAc,IAAI,CAAtB,EAAyB;AACxB;AACA;AACA,YAAII,aAAa,GAAGL,YAAY,CAACC,cAAD,CAAZ,CAA6BK,MAA7B,CAAoCJ,SAApC,CAClBK,QAAD,IAAcA,QAAQ,CAACC,QAAT,KAAsBX,MAAM,CAACE,OAAP,CAAeQ,QAAf,CAAwBC,QADzC,CAApB,CAHwB,CAMxB;AACA;AACA;;AACA,YAAIH,aAAa,IAAI,CAArB,EAAwB;AACvBL,UAAAA,YAAY,CAACC,cAAD,CAAZ,CAA6BK,MAA7B,CAAoCD,aAApC,EAAmDI,QAAnD,IAA+D,CAA/D;AACA,SAFD,MAEO;AACN;AACA,cAAIC,aAAa,GAAG,EACnB,GAAGb,MAAM,CAACE,OAAP,CAAeQ,QADC;AAEnBE,YAAAA,QAAQ,EAAE;AAFS,WAApB;AAIAT,UAAAA,YAAY,CAACC,cAAD,CAAZ,CAA6BK,MAA7B,CAAoCK,IAApC,CAAyCD,aAAzC;AACA;AACD,OAnBD,MAmBO;AACN;AACA;AACA,YAAIE,cAAc,GAAG;AACpBR,UAAAA,MAAM,EAAEP,MAAM,CAACE,OAAP,CAAeK,MADH;AAEpBE,UAAAA,MAAM,EAAE,CACP,EACC,GAAGT,MAAM,CAACE,OAAP,CAAeQ,QADnB;AAECE,YAAAA,QAAQ,EAAE;AAFX,WADO;AAFY,SAArB;AASAT,QAAAA,YAAY,CAACW,IAAb,CAAkBC,cAAlB;AACA;;AACD,aAAO,EACN,GAAGhB,KADG;AAENF,QAAAA,OAAO,EAAEM;AAFH,OAAP;;AAKD,SAAKb,eAAL;AACC,UAAI0B,YAAY,GAAG,CAAC,GAAGjB,KAAK,CAACF,OAAV,CAAnB;AACAmB,MAAAA,YAAY,GAAGA,YAAY,CAACC,MAAb,CACbX,SAAD,IAAeA,SAAS,CAACC,MAAV,KAAqBP,MAAM,CAACE,OAD7B,CAAf;AAGA,aAAO,EACN,GAAGH,KADG;AAENF,QAAAA,OAAO,EAAEmB;AAFH,OAAP;;AAID;AACC,aAAOjB,KAAP;AAxEF;AA0EA,CA3EM","sourcesContent":["import {\r\n\tAGREGAR_PLATO_A_PEDIDO,\r\n\tELIMINAR_PEDIDO,\r\n\tFIN_CARGANDO_PEDIDOS_DB,\r\n\tINICIO_CARGANDO_PEDIDOS_DB,\r\n\tSET_PEDIDOS_DB\r\n} from '../types/types';\r\n\r\nconst initialState = {\r\n\tpedidosDB: [],\r\n\tcargandoPedidosDB: false,\r\n\r\n\tpedidos: []\r\n\t// pedidos: [\r\n\t// \t{\r\n\t// \t\tmesaId: 5,\r\n\t// \t\tplatos: [\r\n\t// \t\t\t{\r\n\t// \t\t\t\tplato_id: 3,\r\n\t// \t\t\t\tplato_nom: 'Tequeños',\r\n\t// \t\t\t\tplato_img:\r\n\t// \t\t\t\t\t'https://dojiw2m9tvv09.cloudfront.net/34469/product/disenosintitulo-78982.png',\r\n\t// \t\t\t\tplato_pre: '15.00',\r\n\t// \t\t\t\tcategoria_id: 2,\r\n\t// \t\t\t\tcantidad: 2\r\n\t// \t\t\t}\r\n\t// \t\t]\r\n\t// \t}\r\n\t// ]\r\n};\r\n\r\nexport const pedidoReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase INICIO_CARGANDO_PEDIDOS_DB:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcargandoPedidosDB: true\r\n\t\t\t};\r\n\t\tcase FIN_CARGANDO_PEDIDOS_DB:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcargandoPedidosDB: false\r\n\t\t\t};\r\n\t\tcase SET_PEDIDOS_DB:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpedidosDB: action.payload\r\n\t\t\t};\r\n\r\n\t\tcase AGREGAR_PLATO_A_PEDIDO:\r\n\t\t\tlet pedidosState = [...state.pedidos];\r\n\t\t\t//Buscando la posición del objeto pedido que tenga la mesaId a la cual queremos\r\n\t\t\t//agregar el plato\r\n\t\t\tlet posicionPedido = pedidosState.findIndex(\r\n\t\t\t\t(objPedido) => objPedido.mesaId === action.payload.mesaId\r\n\t\t\t);\r\n\t\t\tif (posicionPedido >= 0) {\r\n\t\t\t\t// implica que ya existía un pedido para la mesaId a la cual queremos agregar el plato\r\n\t\t\t\t// Entonces buscamos el plato en la mesa encontrada\r\n\t\t\t\tlet posicionPlato = pedidosState[posicionPedido].platos.findIndex(\r\n\t\t\t\t\t(objPlato) => objPlato.plato_id === action.payload.objPlato.plato_id\r\n\t\t\t\t);\r\n\t\t\t\t// analizamos si la posición del plato es mayor o igual 0 para\r\n\t\t\t\t// agregar una unidad en caso de que existiera, o agregar el primer plato\r\n\t\t\t\t// en caso de que no existiera\r\n\t\t\t\tif (posicionPlato >= 0) {\r\n\t\t\t\t\tpedidosState[posicionPedido].platos[posicionPlato].cantidad += 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Implica que es el primer item del plato que agregamos a la mesa\r\n\t\t\t\t\tlet objPlatoNuevo = {\r\n\t\t\t\t\t\t...action.payload.objPlato,\r\n\t\t\t\t\t\tcantidad: 1\r\n\t\t\t\t\t};\r\n\t\t\t\t\tpedidosState[posicionPedido].platos.push(objPlatoNuevo);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// implica que es el primer plato de la mesaId\r\n\t\t\t\t// Entonces creamos un objeto pedido nuevo con el primer plato de la mesa\r\n\t\t\t\tlet objPedidoNuevo = {\r\n\t\t\t\t\tmesaId: action.payload.mesaId,\r\n\t\t\t\t\tplatos: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t...action.payload.objPlato,\r\n\t\t\t\t\t\t\tcantidad: 1\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t};\r\n\t\t\t\tpedidosState.push(objPedidoNuevo);\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpedidos: pedidosState\r\n\t\t\t};\r\n\r\n\t\tcase ELIMINAR_PEDIDO:\r\n\t\t\tlet copiaPedidos = [...state.pedidos];\r\n\t\t\tcopiaPedidos = copiaPedidos.filter(\r\n\t\t\t\t(objPedido) => objPedido.mesaId !== action.payload\r\n\t\t\t);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpedidos: copiaPedidos\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}